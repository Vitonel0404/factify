    # server {
#     listen 80;

#     # Rutas protegidas por token (ventas)
#     location /api/sale/ {
#         auth_request /auth-check;
#         proxy_pass http://sale-service;
#     }

#     # Rutas protegidas por token (productos)
#     location /api/products/ {
#         auth_request /auth-check;
#         proxy_pass http://products-service;
#     }

#     # Interna: validación de token (solo accesible por NGINX)
#     # location = /auth-check {
#     #     internal;
#     #     proxy_pass http://authenticated/validate;
#     #     proxy_pass_request_body off;
#     #     proxy_set_header Content-Length "";
#     #     proxy_set_header Authorization $http_authorization;
#     # }

#     # Login público (sin auth_request)
#     location /auth/login {
#         proxy_pass http://authenticated-service/login;
#     }
# }


server {
    listen 80;
    server_name localhost;

    # Ruta de prueba (opcional)
    location / {
        return 200 'Nginx funcionando correctamente!';
        add_header Content-Type text/plain;
    }

    # Proxy para el servicio de autenticación
    location /auth/ {
        proxy_pass http://authenticated:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Proxy para el servicio de organización
    location /org/ {
        auth_request /auth-check;
        proxy_pass http://organization:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Validación interna del token
    location = /auth-check-admin {
        internal;
        proxy_pass http://authenticated:3000/auth/admin;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    location = /auth-check {
        internal;
        proxy_pass http://authenticated:3000/auth;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    

}