# server {
#     listen 80;
#     server_name localhost;

#     # Ruta de prueba (opcional)
#     location / {
#         return 200 'Nginx funcionando correctamente!';
#         add_header Content-Type text/plain;
#     }

#     # Proxy para el servicio de autenticación
#     location /auth/ {
#         proxy_pass http://authenticated:3000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     # Proxy para el servicio de organización
#     location /org/ {
#         auth_request /auth-check-admin;
#         proxy_pass http://organization:3000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     # Validación interna del token
#     location = /auth-check-admin {
#         internal;
#         proxy_pass http://authenticated:3000/auth/validated-admin;
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_request_body off;
#         proxy_set_header Content-Length "";
#     }

#     location = /auth-check {
#         internal;
#         proxy_pass http://authenticated:3000/auth/validated;
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_request_body off;
#         proxy_set_header Content-Length "";
#     }

    

# }

server {
    listen 80;

    server_name localhost;

    location / {
        proxy_pass http://gateway:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
