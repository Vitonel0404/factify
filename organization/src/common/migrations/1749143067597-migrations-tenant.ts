import { MigrationInterface, QueryRunner } from "typeorm";

export class MigrationsTenant1749143067597 implements MigrationInterface {
    name = 'MigrationsTenant1749143067597'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "supplier" ("id_supplier" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_document_type" integer NOT NULL, "document_number" character varying(15) NOT NULL, "legal_name" character varying(250) NOT NULL, "trade_name" character varying(250) NOT NULL, "phone" character varying(15), "contact_phone" character varying(15), "address" character varying(250), "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_d2419c8f68b4cadb7d59c3ed059" UNIQUE ("document_number"), CONSTRAINT "PK_c90f9e11216e9d5ffcb7e594216" PRIMARY KEY ("id_supplier"))`);
        await queryRunner.query(`CREATE TABLE "voucher_type" ("id_voucher_type" SERIAL NOT NULL, "description" character varying(100) NOT NULL, "sunat_code" character varying(10) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0deb3ac1d72769b93a895be3eec" PRIMARY KEY ("id_voucher_type"))`);
        await queryRunner.query(`CREATE TABLE "sale" ("id_sale" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_voucher_type" integer NOT NULL, "id_customer" integer NOT NULL, "series" character varying(10) NOT NULL, "number" integer NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "total" numeric(20,2) NOT NULL, "taxed_operation" numeric(15,2) NOT NULL, "igv_percent" numeric(10,2) NOT NULL, "igv" numeric(10,2) NOT NULL, "is_credit" boolean NOT NULL DEFAULT false, "due_date" TIMESTAMP, "user_name" character varying(100) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "reason_cancellation" character varying(250), "user_name_cancellation" character varying(100), "send_sunat" boolean NOT NULL DEFAULT false, "id_quotation" integer, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_35a210614b734b6c84d4c8a3285" PRIMARY KEY ("id_sale"))`);
        await queryRunner.query(`CREATE TABLE "quotation_detail" ("id_quotation_detail" SERIAL NOT NULL, "id_quotation" integer NOT NULL, "id_product" integer NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "subtotal" numeric(15,2) NOT NULL, CONSTRAINT "PK_02f60837b776f9f1e60dc3138cd" PRIMARY KEY ("id_quotation_detail"))`);
        await queryRunner.query(`CREATE TABLE "purchase" ("id_purchase" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_supplier" integer NOT NULL, "id_voucher_type" integer NOT NULL, "series" character varying NOT NULL, "number" integer NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "total" numeric(20,2) NOT NULL, "taxed_operation" numeric(15,2) NOT NULL, "igv_percent" numeric(10,2) NOT NULL, "igv" numeric(10,2) NOT NULL, "user_name" character varying NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "reason_cancellation" character varying, "user_name_cancellation" character varying, "id_purchase_order" integer, CONSTRAINT "PK_6aa8fa0d372981adc4bac16c7fe" PRIMARY KEY ("id_purchase"))`);
        await queryRunner.query(`CREATE TABLE "quotation" ("id_quotation" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_customer" integer NOT NULL, "order_quotation" character varying(50) NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "total" numeric(20,2) NOT NULL, "taxed_operation" numeric(15,2) NOT NULL, "igv_percent" numeric(10,2) NOT NULL, "igv" numeric(10,2) NOT NULL, "user_name" character varying NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "reason_cancellation" character varying, "user_name_cancellation" character varying, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0c60dbbbee58c7749a7c8b564b1" PRIMARY KEY ("id_quotation"))`);
        await queryRunner.query(`CREATE TABLE "purchase_order" ("id_purchase_order" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_supplier" integer NOT NULL, "order_number" character varying(50) NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "total" numeric(20,2) NOT NULL, "taxed_operation" numeric(15,2) NOT NULL, "igv_percent" numeric(10,2) NOT NULL, "igv" numeric(10,2) NOT NULL, "user_name" character varying NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "reason_cancellation" character varying, "user_name_cancellation" character varying, CONSTRAINT "PK_c40254c3e7895eb8bcdfedddd32" PRIMARY KEY ("id_purchase_order"))`);
        await queryRunner.query(`CREATE TABLE "sale_detail" ("id_sale_detail" SERIAL NOT NULL, "id_sale" integer NOT NULL, "id_product" integer NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "subtotal" numeric(15,2) NOT NULL, CONSTRAINT "PK_02ef7b45909188890cd095ec60f" PRIMARY KEY ("id_sale_detail"))`);
        await queryRunner.query(`CREATE TABLE "purchase_order_detail" ("id_purchase_order_detail" SERIAL NOT NULL, "id_purchase_order" integer NOT NULL, "id_product" integer NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "subtotal" numeric(15,2) NOT NULL, CONSTRAINT "PK_011a6cee0dd98e6b14c892ff827" PRIMARY KEY ("id_purchase_order_detail"))`);
        await queryRunner.query(`CREATE TABLE "purchase_detail" ("id_purchase_detail" SERIAL NOT NULL, "id_purchase" integer NOT NULL, "id_product" integer NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "subtotal" numeric(15,2) NOT NULL, CONSTRAINT "PK_34c910342b8932b49e058403109" PRIMARY KEY ("id_purchase_detail"))`);
        await queryRunner.query(`CREATE TABLE "product_movement" ("id_movement" SERIAL NOT NULL, "id_product" integer NOT NULL, "id_branch" integer NOT NULL, "movement_type" character varying(50) NOT NULL, "quantity" numeric(10,2) NOT NULL, "observation" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_16818f14258cba14f6058d72c91" PRIMARY KEY ("id_movement"))`);
        await queryRunner.query(`CREATE TABLE "sale_payment" ("id_sale_payment" SERIAL NOT NULL, "id_sale" integer NOT NULL, "id_payment_method" integer NOT NULL, "amount" numeric(15,2) NOT NULL, CONSTRAINT "PK_e3cd1209f96c7663da3757c9f7b" PRIMARY KEY ("id_sale_payment"))`);
        await queryRunner.query(`CREATE TABLE "product" ("id_product" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_category" integer NOT NULL, "id_measure" integer NOT NULL, "description" character varying(250) NOT NULL, "price" numeric(10,2) NOT NULL, "stock" numeric(10,2) NOT NULL, "minimum_stock" numeric(10,2) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_c8e2cf92d09d65c583fad34341c" PRIMARY KEY ("id_product"))`);
        await queryRunner.query(`CREATE TABLE "payment_method" ("id_payment_method" SERIAL NOT NULL, "description" character varying(100) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_26d4c2b22492911d521d31736e3" UNIQUE ("description"), CONSTRAINT "PK_0036fc8191f7f8fa6908ea375bc" PRIMARY KEY ("id_payment_method"))`);
        await queryRunner.query(`CREATE TABLE "document_type" ("id_document_type" SERIAL NOT NULL, "description" character varying(100) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_43b436866b2dd5c90f897250190" PRIMARY KEY ("id_document_type"))`);
        await queryRunner.query(`CREATE TABLE "measure" ("id_measure" SERIAL NOT NULL, "id_branch" integer NOT NULL, "description" character varying(250) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_438d9c3b8b31d31103920e390cd" PRIMARY KEY ("id_measure"))`);
        await queryRunner.query(`CREATE TABLE "customer" ("id_customer" SERIAL NOT NULL, "id_document_type" integer NOT NULL, "document_number" character varying(15) NOT NULL, "full_name" character varying(250) NOT NULL, "address" character varying(200), "phone" character varying(20), "email" character varying(100), "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_badc729229b32ff6ada29d46584" UNIQUE ("document_number"), CONSTRAINT "PK_46f6dd0d95f8b022dda93119649" PRIMARY KEY ("id_customer"))`);
        await queryRunner.query(`CREATE TABLE "credit_note_detail" ("id_credit_note_detail" SERIAL NOT NULL, "id_credit_note" integer NOT NULL, "id_product" integer NOT NULL, "price" numeric(10,2) NOT NULL, "quantity" integer NOT NULL, "subtotal" numeric(15,2) NOT NULL, CONSTRAINT "PK_96d7ea5392cee44ba9b82c0ae94" PRIMARY KEY ("id_credit_note_detail"))`);
        await queryRunner.query(`CREATE TABLE "correlative" ("id_correlative" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_voucher_type" integer NOT NULL, "series" character varying(10) NOT NULL, "last_number" integer NOT NULL, "maximun_correlative" integer NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_5076ac94cc70e3124a717dec43e" UNIQUE ("series"), CONSTRAINT "PK_970c67845c9159b9c9b47cc22fe" PRIMARY KEY ("id_correlative"))`);
        await queryRunner.query(`CREATE TABLE "credit_note" ("id_credit_note" SERIAL NOT NULL, "id_branch" integer NOT NULL, "id_voucher_type" integer NOT NULL, "credit_note_type" character varying NOT NULL, "series" character varying NOT NULL, "number" integer NOT NULL, "date" TIMESTAMP NOT NULL DEFAULT now(), "reference_series" character varying NOT NULL, "reference_number" integer NOT NULL, "total" numeric(20,2) NOT NULL, "taxed_operation" numeric(15,2) NOT NULL, "igv_percent" numeric(10,2) NOT NULL, "igv" numeric(10,2) NOT NULL, "user_name" character varying NOT NULL, "send_sunat" boolean NOT NULL DEFAULT false, CONSTRAINT "PK_6ace6311f4d1c232eaf10d89ac3" PRIMARY KEY ("id_credit_note"))`);
        await queryRunner.query(`CREATE TABLE "category" ("id_category" SERIAL NOT NULL, "id_branch" integer NOT NULL, "description" character varying(250) NOT NULL, "is_active" boolean NOT NULL DEFAULT true, "is_eliminated" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_7b7115fda47b20b277b8ca6f89f" UNIQUE ("description"), CONSTRAINT "PK_9cfdf8d215b7072d300b9bbcafe" PRIMARY KEY ("id_category"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "category"`);
        await queryRunner.query(`DROP TABLE "credit_note"`);
        await queryRunner.query(`DROP TABLE "correlative"`);
        await queryRunner.query(`DROP TABLE "credit_note_detail"`);
        await queryRunner.query(`DROP TABLE "customer"`);
        await queryRunner.query(`DROP TABLE "measure"`);
        await queryRunner.query(`DROP TABLE "document_type"`);
        await queryRunner.query(`DROP TABLE "payment_method"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`DROP TABLE "sale_payment"`);
        await queryRunner.query(`DROP TABLE "product_movement"`);
        await queryRunner.query(`DROP TABLE "purchase_detail"`);
        await queryRunner.query(`DROP TABLE "purchase_order_detail"`);
        await queryRunner.query(`DROP TABLE "sale_detail"`);
        await queryRunner.query(`DROP TABLE "purchase_order"`);
        await queryRunner.query(`DROP TABLE "quotation"`);
        await queryRunner.query(`DROP TABLE "purchase"`);
        await queryRunner.query(`DROP TABLE "quotation_detail"`);
        await queryRunner.query(`DROP TABLE "sale"`);
        await queryRunner.query(`DROP TABLE "voucher_type"`);
        await queryRunner.query(`DROP TABLE "supplier"`);
    }

}
